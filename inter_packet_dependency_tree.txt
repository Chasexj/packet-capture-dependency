Inter Packet Header Field Value Calculation Dependency
├── IP Conversation
│   ├── Packet 1 (From Source to Destination)
│   │   ├── Source IP Address (same for all packets from Source in the conversation)
│   │   ├── Destination IP Address (same for all packets from Source in the conversation)
│   │   ├── Identification (incremented for each packet sent by Source, initially a randomly generated number or zero)
│   │   ├── Flags (based on fragmentation needs and routing precedence)
│   │   │   ├── Reserved (always set to 0)
│   │   │   ├── Don't Fragment (set to 1 if the packet should not be fragmented; else set to 0)
│   │   │   └── More Fragments (set to 1 if this packet is a fragment and not the last one; else set to 0)
│   │   ├── Fragment Offset (0 if the packet is not a fragment; else denotes where this fragment fits in the original packet in units of 8 bytes)
│   │   └── Protocol (based on upper layer protocol, same for all related packets in the conversation)
│   ├── Packet 2 (From Destination to Source, for instance, a response in TCP/UDP/ICMP)
│   │   ├── Source IP Address (same for all packets from Destination in the conversation)
│   │   ├── Destination IP Address (same for all packets from Destination in the conversation)
│   │   ├── Identification (incremented for each packet sent by Destination, initially a randomly generated number or zero)
│   │   ├── Flags (based on fragmentation needs and routing precedence)
│   │   │   ├── Reserved (always set to 0)
│   │   │   ├── Don't Fragment (set to 1 if the packet should not be fragmented; else set to 0)
│   │   │   └── More Fragments (set to 1 if this packet is a fragment and not the last one; else set to 0)
│   │   ├── Fragment Offset (0 if the packet is not a fragment; else denotes where this fragment fits in the original packet in units of 8 bytes)
│   │   └── Protocol (based on upper layer protocol, same for all related packets in the conversation)
│   ├── Subsequent Packets (within the same conversation)
│   │   ├── From Source to Destination
│   │   │   ├── Source IP Address (same for all packets from Source in the conversation)
│   │   │   ├── Destination IP Address (same for all packets from Source in the conversation)
│   │   │   ├── Identification (incremented for each packet sent by Source)
│   │   │   ├── Flags (based on fragmentation needs and routing precedence)
│   │   │   │   ├── Reserved (always set to 0)
│   │   │   │   ├── Don't Fragment (set to 1 if the packet should not be fragmented; else set to 0)
│   │   │   │   └── More Fragments (set to 1 if this packet is a fragment and not the last one; else set to 0)
│   │   │   ├── Fragment Offset (0 if the packet is not a fragment; else denotes where this fragment fits in the original packet in units of 8 bytes)
│   │   │   └── Protocol (based on upper layer protocol, same for all related packets in the conversation)
│   │   └── From Destination to Source
│   │       ├── Source IP Address (same for all packets from Destination in the conversation)
│   │       ├── Destination IP Address (same for all packets from Destination in the conversation)
│   │       ├── Identification (incremented for each packet sent by Destination)
│   │       ├── Flags (based on fragmentation needs and routing precedence)
│   │       │   ├── Reserved (always set to 0)
│   │       │   ├── Don't Fragment (set to 1 if the packet should not be fragmented; else set to 0)
│   │       │   └── More Fragments (set to 1 if this packet is a fragment and not the last one; else set to 0)
│   │       ├── Fragment Offset (0 if the packet is not a fragment; else denotes where this fragment fits in the original packet in units of 8 bytes)
│   │       └── Protocol (based on upper layer protocol, same for all related packets in the conversation)
│   ├── Packet Loss and Retransmission Scenario (specific to TCP)
│   │   ├── Packet N (lost in transmission)
│   │   └── Retransmission of Packet N
│   │       ├── Source IP Address / Destination IP Address (same as lost Packet N)
│   │       ├── Identification (should be different from lost Packet N as it's a new IP packet)
│   │       ├── Flags (based on fragmentation needs and routing precedence)
│   │       │   ├── Reserved (always set to 0)
│   │       │   ├── Don't Fragment (set to 1 if the packet should not be fragmented; else set to 0)
│   │       │   └── More Fragments (set to 1 if this packet is a fragment and not the last one; else set to 0)
│   │       └── Fragment Offset (0 if the packet is not a fragment; else denotes where this fragment fits in the original packet in units of 8 bytes)
│   └── others
├── TCP Session
│   ├── Packet 1 (From Source to Destination)
│   │   ├── Source Port (same for all packets from Source in the session)
│   │   ├── Destination Port (same for all packets from Source in the session)
│   │   ├── Sequence Number (initially a randomly generated number)
│   │   ├── Acknowledgment Number (no acknowledgment for the first packet, or if SYN flag is set)
│   │   └── Flags
│   │       ├── SYN (set in the first packet to initiate a connection)
│   │       ├── ACK (not set in the first packet)
│   │       └── others
│   ├── Packet 2 (SYN-ACK packet from Destination to Source)
│   │   ├── Source Port (same for all packets from Destination in the session)
│   │   ├── Destination Port (same for all packets from Destination in the session)
│   │   ├── Sequence Number (initially a randomly generated number, different from the Source's sequence number)
│   │   ├── Acknowledgment Number (Sequence Number of Packet 1 + 1)
│   │   └── Flags
│   │       ├── SYN (set in this packet to respond to the Source's SYN)
│   │       ├── ACK (set in this packet to acknowledge receipt of the Source's SYN)
│   │       └── others
│   ├── Packet 3 (ACK packet from Source to Destination)
│   │   ├── Source Port (same for all packets from Source in the session)
│   │   ├── Destination Port (same for all packets from Source in the session)
│   │   ├── Sequence Number (Sequence Number of Packet 1 + 1)
│   │   ├── Acknowledgment Number (Sequence Number of Packet 2 + 1)
│   │   └── Flags
│   │       ├── ACK (set in this packet to acknowledge receipt of the Destination's SYN)
│   │       └── others
│   ├── Subsequent Packets (within the same session)
│   │   ├── From Source to Destination
│   │   │   ├── Source Port (same for all packets from Source in the session)
│   │   │   ├── Destination Port (same for all packets from Source in the session)
│   │   │   ├── Sequence Number (Sequence Number of last packet sent by Source + number of bytes of data sent in the last packet)
│   │   │   ├── Acknowledgment Number (Sequence Number of last packet received from Destination + number of bytes of data received in the last packet)
│   │   │   └── Flags
│   │   │       ├── ACK (set in all packets after the initial exchange to acknowledge receipt of data)
│   │   │       └── others
│   │   └── From Destination to Source
│   │       ├── Source Port (same for all packets from Destination in the session)
│   │       ├── Destination Port (same for all packets from Destination in the session)
│   │       ├── Sequence Number (Sequence Number of last packet sent by Destination + number of bytes of data sent in the last packet)
│   │       ├── Acknowledgment Number (Sequence Number of last packet received from Source + number of bytes of data received in the last packet)
│   │       └── Flags
│   │           ├── ACK (set in all packets after the initial exchange to acknowledge receipt of data)
│   │           └── others
│   ├── Packet Loss Scenario
│   │   ├── Packet N (lost in transmission)
│   │   ├── Packet N+1 (sent by the same host as Packet N)
│   │   │   └── Acknowledgment Number (no acknowledgment for Packet N, repeats acknowledgment number of Packet N-1)
│   │   └── Retransmission of Packet N
│   │       ├── Sequence Number (same as lost Packet N)
│   │       └── Acknowledgment Number (same as lost Packet N)
│   └── others
├── UDP Session
│   ├── Packet 1 (From Source to Destination)
│   │   ├── Source Port (randomly assigned if not a well-known service)
│   │   ├── Destination Port (specific to the service on the destination)
│   │   ├── Length (the length of the UDP header and the data)
│   │   └── Checksum (optional; calculated from the UDP header, data, and a pseudo-header)
│   ├── Packet 2 (possible reply from Destination to Source)
│   │   ├── Source Port (should match the Destination Port of Packet 1)
│   │   ├── Destination Port (should match the Source Port of Packet 1)
│   │   ├── Identical Length and Checksum computation procedure as in Packet 1
│   ├── Subsequent Packets (within the same conversation)
│   │   ├── From Source to Destination
│   │   │   ├── Source Port (same as in Packet 1)
│   │   │   ├── Destination Port (same as in Packet 1)
│   │   └── From Destination to Source
│   │   |   ├── Source Port (same as in Packet 2)
│   │   |   ├── Destination Port (same as in Packet 2)
│   │   ├── Length (varies based on the size of the UDP header and data)
│   │   └── Checksum (varies based on the content of the packet)
│   └── others
└── ICMP Session
    ├── Packet 1 (ICMP Echo Request - From Source to Destination)
    │   ├── Type (8 for Echo Request)
    │   ├── Code (0 for Echo Request)
    │   ├── Checksum (computed from the entire ICMP message)
    │   ├── Identifier (chosen by the sender to match Echo Request with Echo Reply)
    │   └── Sequence Number (starts at 0, increments with each subsequent Echo Request)
    ├── Packet 2 (ICMP Echo Reply - From Destination to Source)
    │   ├── Type (0 for Echo Reply)
    │   ├── Code (0 for Echo Reply)
    │   ├── Checksum (computed from the entire ICMP message)
    │   ├── Identifier (same as in the Echo Request)
    │   └── Sequence Number (same as in the Echo Request)
    ├── Subsequent Packets (within the same session)
    │   ├── Packet N (ICMP Echo Request - From Source to Destination)
    │   │   ├── Type (8 for Echo Request)
    │   │   ├── Code (0 for Echo Request)
    │   │   ├── Checksum (varies based on the content of the message)
    │   │   ├── Identifier (same as in the first Echo Request)
    │   │   └── Sequence Number (increments with each subsequent Echo Request)
    │   └── Packet N (ICMP Echo Reply - From Destination to Source)
    │       ├── Type (0 for Echo Reply)
    │       ├── Code (0 for Echo Reply)
    │       ├── Checksum (varies based on the content of the message)
    │       ├── Identifier (same as in the Echo Request)
    │       └── Sequence Number (same as in the Echo Request)
    └── others
